[tool.black]
target-version = ['py311']
safe = true

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false


[tool.ruff.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = [
    "deebot_client",
]



[tool.ruff]
select = [
    "B002", # Python does not support the unary prefix increment
    "B007", # Loop control variable {name} not used within loop body
    "B014", # Exception handler with duplicate exception
    "B023", # Function definition does not bind loop variable {name}
    "B026", # Star-arg unpacking after a keyword argument is strongly discouraged
    "C",  # complexity
    "COM818", # Trailing comma on bare tuple prohibited
    "D",  # docstrings
    "DTZ003",  # Use datetime.now(tz=) instead of datetime.utcnow()
    "DTZ004",  # Use datetime.fromtimestamp(ts, tz=) instead of datetime.utcfromtimestamp(ts)
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "G", # flake8-logging-format
    "I",  # isort
    "ICN001", # import concentions; {name} should be imported as {asname}
    "ISC001", # Implicitly concatenated string literals on one line
    "N",  # pep8-naming
    "PIE", # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "PGH001", # No builtin eval() allowed
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "PLC", # pylint
    "PLE", # pylint
    "PLR", # pylint
    "PLW", # pylint
    "Q000", # Double quotes found but single quotes preferred
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "S",  # flake8-bandit
    "SIM105", # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM117", # Merge with-statements that use the same scope
    "SIM118", # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM201", # Use {left} != {right} instead of not {left} == {right}
    "SIM208", # Use {expr} instead of not (not {expr})
    "SIM212", # Use {a} if {a} else {b} instead of {b} if not {a} else {a}
    "SIM300", # Yoda conditions. Use 'age == 42' instead of '42 == age'.
    "SIM401", # Use get from dict with default instead of an if block
    "T100", # Trace found: {name} used
    "T20",  # flake8-print
    "TID251", # Banned imports
    "TRY004", # Prefer TypeError exception for invalid type
    "TRY200", # Use raise from to specify exception cause
    "TRY302", # Remove exception handler; error is immediately re-raised
    "UP",  # pyupgrade
    "W",  # pycodestyle
]
ignore = [
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in `__init__`
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "E501",  # line too long

    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    # Ignored due to performance: https://github.com/charliermarsh/ruff/issues/2923
    "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
]

[tool.ruff.per-file-ignores]
"tests/**" = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "N802",  # Function name {name} should be lowercase
    "N816",  # Variable {name} in global scope should not be mixedCase
    "S101",  # Use of assert detected
    "T201",  # print found
]

[tool.ruff.mccabe]
max-complexity = 12

[tool.ruff.pylint]
max-args = 7


