name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  code-quality:
    runs-on: "ubuntu-latest"
    name: Check code quality
    steps:
      - uses: actions/checkout@v4
      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install the project
        run: uv sync --all-extras --dev
      # Following steps cannot run by pre-commit.ci as repo = local
      - name: Run mypy
        run: uv run mypy deebot_client/
      - name: Pylint review
        run: uv run pylint deebot_client/
      - name: Verify no getLogger usages
        run: scripts/check_getLogger.sh
      - name: Minimize uv cache
        run: uv cache prune --ci

  tests:
    runs-on: "ubuntu-latest"
    name: Run tests
    strategy:
      matrix:
        python-version:
          - "3.12"
    steps:
      - uses: "actions/checkout@v4"
      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}-${{ matrix.python-version }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}-${{ matrix.python-version }}
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run pytest
        run: uv run pytest tests --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
      - name: Minimize uv cache
        run: uv cache prune --ci
